"""
A general linear algebra library
"""
from __future__ import annotations
import typing
__all__: list[str] = ['Vector2D']
class Vector2D:
    def __add__(self, arg0: Vector2D) -> Vector2D:
        ...
    def __iadd__(self, arg0: Vector2D) -> Vector2D:
        ...
    def __init__(self, x: typing.SupportsFloat, y: typing.SupportsFloat) -> None:
        ...
    def __isub__(self, arg0: Vector2D) -> Vector2D:
        ...
    def __repr__(self) -> str:
        ...
    def __sub__(self, arg0: Vector2D) -> Vector2D:
        ...
    @typing.overload
    def x(self) -> float:
        ...
    @typing.overload
    def x(self, x: typing.SupportsFloat) -> None:
        ...
    @typing.overload
    def y(self) -> float:
        ...
    @typing.overload
    def y(self, y: typing.SupportsFloat) -> None:
        ...
